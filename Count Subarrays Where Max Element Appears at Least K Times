Approach 1:

class Solution {
    public long countSubarrays(int[] nums, int k) {
        int maxE = Arrays.stream(nums).max().getAsInt();

        int n = nums.length;
        int i = 0, j = 0;

        long result = 0;
        int countMax = 0;

        while (j < n) {
            if (nums[j] == maxE) {
                countMax++;
            }

            while (countMax >= k) {
                result += n - j;

                if (nums[i] == maxE) {
                    countMax--;
                }
                i++;
            }
            j++;
        }

        return result;
    }
}


Apprach 2:

class Solution {
    public long countSubarrays(int[] nums, int k) {
        long res = 0;
        int max = 0, count = 0;
        for (int num : nums) {
            max = Math.max(max, num);
        }
        int l = 0;
        for (int r = 0; r < nums.length; r++) {
            if (nums[r] == max)
                count++;
            while (count >= k) {
                if (nums[l++] == max)
                    count--;
            }
            res += l;
        }
        return res;
    }
}
